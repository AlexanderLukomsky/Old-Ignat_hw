{"version":3,"sources":["p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h5/Header.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","useState","openMenu","setOpenMenu","className","onClick","to","Message","props","src","avatar","alt","name","message","time","messageData","HW1","Affair","style","fontSize","color","affair","priority","margin","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","e","setFilter","defaultAffairs","HW2","affairs","setAffairs","filter","filteredAffairs","p","filterAffairs","el","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","value","onChange","GreetingContainer","users","addUserCallback","setName","setError","length","currentTarget","RegExp","test","HW3","setUsers","v1","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","finalSpanClassName","finalInputClassName","key","SuperButton","red","restProps","finalClassName","SuperCheckbox","onChangeChecked","children","checked","HW4","text","setText","showAlert","alert","setChecked","disabled","Error404","PreJunior","PATH","Routes","path","exact","render","HW5","App","s","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.d74b2703.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3NnBl\"};","import React, { useState } from 'react'\nimport { NavLink } from 'react-router-dom'\n\nfunction Header() {\n    const [openMenu, setOpenMenu] = useState<boolean>(false)\n    return (\n        <div className={`hw5__menu ${openMenu ? 'open-menu' : ''}`}>\n            <div onClick={() => { setOpenMenu(!openMenu) }} className={'hw5__burger'}>\n                <div className={`hw5__burger-bar1`}></div>\n                <div className={`hw5__burger-bar2 `}></div>\n                <div className={`hw5__burger-bar3`}></div>\n            </div>\n            {openMenu &&\n                <ul className={`hw5__navbar`} onClick={() => { setOpenMenu(!openMenu) }}>\n                    <li>\n                        <NavLink to='/hw-1'>\n                            hw-1\n                        </NavLink>\n                    </li>\n                    <li>\n                        <NavLink to='/hw-2'>\n                            hw-2\n                        </NavLink>\n                    </li>\n                    <li>\n                        <NavLink to='/hw-3'>\n                            hw-3\n                        </NavLink>\n                    </li>\n                    <li>\n                        <NavLink to='/hw-4'>\n                            hw-4\n                        </NavLink>\n                    </li>\n                    <li>\n                        <NavLink to='/'>\n                            home page\n                        </NavLink>\n                    </li>\n                </ul>\n            }\n        </div>\n    )\n}\n\nexport default Header\n","type propsType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\nfunction Message(props: propsType) {\n    return (\n        <div className={'hw1__message message'}>\n            <div className={'message__image'} >\n                <img src={props.avatar} alt=\"\" />\n            </div>\n            <div className={'message__box'}>\n                <div className={'message__title'}>\n                    {props.name}\n                </div>\n                <p className={'message__text'}>\n                    {props.message}\n                    <span>\n                        {props.time}\n                    </span>\n                </p>\n\n            </div>\n        </div>\n    )\n}\n\nexport default Message\n","import './hw1.scss'\nimport Message from './Message'\n\nconst messageData = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'Some Name',\n    message: 'some text',\n    time: '22:00',\n}\n\nfunction HW1() {\n    return (\n        <div className={'hw1 homeworks'}>\n            <div className={'hw1__title title'}>\n                homeworks 1\n            </div>\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react'\nimport { AffairType } from './HW2';\n\ntype AffairPropsType = {\n    affair: AffairType\n    deleteAffairCallback: (id: number) => void\n}\n\nfunction Affair(props: AffairPropsType) {\n    const style = {\n        fontSize: '14px',\n        color: (props.affair.priority === 'high') ? 'red' :\n            (props.affair.priority === 'middle') ? 'orange' :\n                'green',\n        margin: '0 10px'\n    }\n    const deleteCallback = () => { props.deleteAffairCallback(props.affair._id) }\n    return (\n        <div className={'hw2__item'}>\n            <span className={'hw2__item_title'}>\n                {props.affair.name}\n            </span>\n            <span style={style}>\n                {props.affair.priority}\n            </span>\n            <button className={'hw2__item_btn'} onClick={deleteCallback}>X</button>\n        </div>\n    )\n}\n\nexport default Affair\n","import React, { MouseEvent } from 'react'\nimport Affair from './Affair'\nimport { AffairType, FilterType } from './HW2'\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: (prior: FilterType) => void\n    deleteAffairCallback: any\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair\n            key={a._id}\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n    const setAll = (e: MouseEvent<HTMLButtonElement>) => { props.setFilter('all') } // need to fix\n    const setHigh = (e: MouseEvent<HTMLButtonElement>) => { props.setFilter('high') }\n    const setMiddle = (e: MouseEvent<HTMLButtonElement>) => { props.setFilter('middle') }\n    const setLow = (e: MouseEvent<HTMLButtonElement>) => { props.setFilter('low') }\n\n    return (\n        <div className={'hw2__container'}>\n            <div className={'hw2__list'}>\n                {mappedAffairs}\n            </div>\n            <button className={'hw2__btn'} onClick={setAll}>All</button>\n            <button className={'hw2__btn'} onClick={setHigh}>High</button>\n            <button className={'hw2__btn'} onClick={setMiddle}>Middle</button>\n            <button className={'hw2__btn'} onClick={setLow}>Low</button>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, { useState } from 'react'\nimport Affairs from './Affairs'\nimport './hw2.scss'\n// types\nexport type AffairPriorityType = 'high' | 'low' | 'middle'\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: AffairPriorityType\n}\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\n    { _id: 1, name: 'React', priority: 'high' },\n    { _id: 2, name: 'anime', priority: 'low' },\n    { _id: 3, name: 'games', priority: 'low' },\n    { _id: 4, name: 'work', priority: 'high' },\n    { _id: 5, name: 'html & css', priority: 'middle' },\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => {\n    if (filter === 'all') return affairs\n    if (filter === 'high') return affairs.filter(p => p.priority === 'high')\n    if (filter === 'middle') return affairs.filter(p => p.priority === 'middle')\n    if (filter === 'low') return affairs.filter(p => p.priority === 'low')\n    return affairs\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\n    return affairs.filter(el => el._id !== _id)\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n    return (\n        <div className={'hw2 homeworks'}>\n            <div className={'hw2__title  title'}>\n                homeworks 2\n            </div>\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n        </div>\n    )\n}\n\nexport default HW2\n","import React, { ChangeEvent } from 'react'\n\n\ntype GreetingPropsType = {\n    name: string\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\n    addUser: () => void\n    error: string\n    totalUsers: number\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    { name, setNameCallback, addUser, error, totalUsers } // деструктуризация пропсов\n) => {\n    const inputClass = !error ? 'hw3__input' : 'hw3__input hw3__error-input'\n\n    return (\n        <div className={'hw3__container'}>\n            <input value={name} onChange={setNameCallback} className={inputClass} />\n            <span className={'hw3__error'}>{error}</span>\n            <button onClick={addUser}>add</button>\n            <span className={'hw3__counter'}>\n                {totalUsers}</span>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, { ChangeEvent, useState } from 'react'\nimport Greeting from './Greeting'\nimport { UserType } from './HW3'\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType> // need to fix any\n    addUserCallback: (name: string) => void // need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({ users, addUserCallback }) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('')\n    const [error, setError] = useState<string>('')\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        setName(e.currentTarget.value)\n        setError('')\n    }\n    const addUser = () => {\n        const regExp = RegExp(/^[a-zA-Z]+$/)\n        if (!regExp.test(name)) {\n            return setError('enter your name, only in Latin letters')\n        }\n        if (name.length < 3) {\n            return setError('name length must be more than 3 characters')\n        }\n        addUserCallback(name)\n        setName('')\n        setError('')\n    }\n\n    const totalUsers = users.length\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, { useState } from 'react'\nimport { v1 } from 'uuid'\nimport GreetingContainer from './GreetingContainer'\nimport './hw3.scss'\n// types\nexport type UserType = {\n    _id: string\n    name: string\n}\n\n\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([])\n\n    const addUserCallback = (name: string) => {\n        setUsers([...users, { name: name, _id: v1() }])\n    }\n    return (\n        <div className={'hw3 homeworks'}>\n            <div className={'hw3__title title'}>\n                homeworks 3\n            </div>\n            <GreetingContainer users={users} addUserCallback={addUserCallback} />\n        </div>\n    )\n}\n\nexport default HW3\n","import React, { ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent } from 'react'\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> =\r\n    ({\r\n        type,\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...props\r\n    }) => {\r\n        const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n            onChange && onChange(e)\r\n            onChangeText && onChangeText(e.currentTarget.value)\r\n        }\r\n\r\n        const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n            onKeyPress && onKeyPress(e);\r\n            onEnter && e.key === 'Enter' && onEnter()\r\n        }\r\n        const finalSpanClassName = `${error ? 'hw4__span visible' : 'hw4__span'}`\r\n        const finalInputClassName = `${error ? 'hw4__input error-input' : 'hw4__input'}`\r\n        return (\r\n            <>\r\n                <input\r\n                    type={'text'}\r\n                    onChange={onChangeCallback}\r\n                    onKeyPress={onKeyPressCallback}\r\n                    className={finalInputClassName}\r\n                    value={props.value}\r\n                    {...props}\r\n                />\r\n                <div className={'hw4__error-container'}>\r\n                    {error && <span className={finalSpanClassName}>{error}</span>}\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\nexport default SuperInputText\r\n","import React, { ButtonHTMLAttributes, DetailedHTMLProps } from 'react'\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? 'hw4__btn btn-red' : 'hw4__btn'}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps}\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, { ChangeEvent, DetailedHTMLProps, InputHTMLAttributes } from 'react'\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type,\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n        onChange && onChange(e)\r\n    }\r\n\r\n    const finalInputClassName = `hw4__checkbox ${className ? className : ''}`\r\n\r\n    return (\r\n        <label className={'hw4__checkbox-container'}>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n                checked={restProps.checked}\r\n                {...restProps}\r\n            />\r\n            {children && <span className={'hw4__checkbox-title '}>{children}</span>}\r\n        </label>\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, { ChangeEvent, useState } from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport './hw4.scss'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n    const onFocus = () => {\r\n        setText('')\r\n    }\r\n    return (\r\n        <div className={'hw4 homeworks'}>\r\n            <div className={'hw4__title title'}>\r\n                homeworks 4\r\n            </div>\r\n\r\n            <div className={'hw4__container'}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    spanClassName={''}\r\n                />\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n                <SuperButton\r\n                    red\r\n                    onClick={showAlert}\r\n                >\r\n                    delete\r\n                </SuperButton>\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text\r\n                </SuperCheckbox>\r\n                <SuperCheckbox checked={checked} onChange={testOnChange} >\r\n                    some text -2\r\n                </SuperCheckbox>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nfunction Error404() {\n    return (\n        <div className={'hw5__error-page'}>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n            <NavLink to='/'>Back to home page</NavLink>\n        </div>\n    )\n}\n\nexport default Error404\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW6/>*/}\n\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom'\nimport HW1 from '../h1/HW1'\nimport HW2 from '../h2/HW2'\nimport HW3 from '../h3/HW3'\nimport HW4 from '../h4/HW4'\nimport Error404 from './pages/Error404'\nimport PreJunior from './pages/PreJunior'\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    HW1: '/hw-1',\n    HW2: '/hw-2',\n    HW3: '/hw-3',\n    HW4: '/hw-4'\n    // add paths\n}\n\nfunction Routes() {\n    return (\n        <div>\n            <Switch>\n                <Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR} />} />\n                <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior />} />\n                <Route path={PATH.HW1} render={() => <HW1 />} />\n                <Route path={PATH.HW2} render={() => <HW2 />} />\n                <Route path={PATH.HW3} render={() => <HW3 />} />\n                <Route path={PATH.HW4} render={() => <HW4 />} />\n                <Route render={() => <Error404 />} />\n            </Switch>\n        </div>\n    )\n}\n\nexport default Routes\n","import './style.scss'\nimport { HashRouter } from 'react-router-dom'\nimport Header from './Header'\nimport Routes from './Routes'\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n                <Header />\n                <Routes />\n            </HashRouter>\n        </div>\n    )\n}\n\nexport default HW5\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport './App.scss'\r\n// import HW1 from '../../../p2-homeworks/h1/HW1'\r\n// import HW2 from '../../../p2-homeworks/h2/HW2'\r\n// import HW3 from '../../../p2-homeworks/h3/HW3'\r\n// import HW4 from '../../../p2-homeworks/h4/HW4'\r\nimport HW5 from '../../../p2-homeworks/h5/HW5'\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            {/* <HW1 /> */}\r\n            {/* <HW2 /> */}\r\n            {/* <HW3 /> */}\r\n            {/* <HW4 /> */}\r\n            <HW5 />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}